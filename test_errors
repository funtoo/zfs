#!/bin/bash
#
# Test how zfs counts errors
#
# 1. Create a mirrored pool of two md-raid devices.
# 2. Write a file to the pool.
# 3. Export the pool, scramble it's contents, re-import the pool.
# 5 (optionally with '-r') enable simulated read errors though mdadm.
# 4. Read back the file.
# 6. Look at read and checksum errors reported in `zpool status`, as well as the number of read & checksum errors as seen by zfs.ko via newly added zfs_dbgmsg prints.
#
# Arguments:
#	-r:	Turn on simulated read errors
#


if [ "$1" = "-r" ] ; then
	# turn on simulated read errors
	read_err=1
fi


function clear_all
{
	sudo bash -c 'echo 0 > /proc/spl/kstat/zfs/dbgmsg'
	sudo ./cmd/zpool/zpool events -c 
}

function export_import
{
	sudo ./cmd/zpool/zpool export mypool2
	sudo ./cmd/zpool/zpool import mypool2
}

function header
{
	echo "######## $1 ########"
}

function print_stats
{
	sudo ./cmd/zpool/zpool status -s
	if [ "$read_err" == "1" ] ; then
		echo -n "Read errors: "
		cat /proc/spl/kstat/zfs/dbgmsg  | grep "zio_err 5," | wc -l
	fi

	echo -n "checksum errs: "
	cat /proc/spl/kstat/zfs/dbgmsg |  grep 'zio_err 52'  | wc -l
	echo -n "repair IOs: "
	cat /proc/spl/kstat/zfs/dbgmsg  | grep "repair IO" | wc -l
	echo -n "IO events: "
	sudo ./cmd/zpool/zpool events | grep ereport.fs.zfs.io | wc -l
	echo ""
}

ourfiles="/tmp/test_image1 /tmp/test_image2 /tmp/mypool2"
for i in $ourfiles ; do
	if [ -e "$i" ] ; then
		echo "$i already exists, exiting"
		exit 1
	fi
done

header "Setting up pool"
sudo ./scripts/zfs.sh -u
sudo ./scripts/zfs.sh zfs_dbgmsg_enable=1
truncate -s 500M /tmp/test_image1 /tmp/test_image2

sudo losetup /dev/loop100 /tmp/test_image1
sudo losetup /dev/loop101 /tmp/test_image2

sudo mdadm -B /dev/md100 -l faulty -n1 /dev/loop100
sudo mdadm -B /dev/md101 -l faulty -n1 /dev/loop101

sudo ./cmd/zpool/zpool create -m /tmp/mypool2 mypool2 mirror /dev/md100 /dev/md101
sudo ./cmd/zfs/zfs set compression=off mypool2

sudo ./tests/zfs-tests/cmd/file_write/file_write -o overwrite -f /tmp/mypool2/bigfile -b 1048576 -c 400 -d R
sudo ./cmd/zpool/zpool export mypool2

header "Scrambling pool"
sudo dd if=/dev/zero of=/tmp/test_image1 bs=10M seek=15 count=10 conv=notrunc
clear_all
sudo ./cmd/zpool/zpool import mypool2
header "Scrambled pool initial status:"
print_stats


for i in {1..10} ; do 
	header "Reading file try $i"
	export_import

	# wait for mount
	while [ ! -e /tmp/mypool2/bigfile ] ; do sleep 1 ; done

	clear_all


	if [ "$read_err" == "1" ] ; then
		# create error on every read
		sudo mdadm -G /dev/md100 --layout=wt1
	fi

	cat /tmp/mypool2/bigfile > /dev/null

	if [ "$read_err" == "1" ] ; then
		# disable read errors
		sudo mdadm -G /dev/md100 --layout=clear
	fi

	echo "Status after reading file:"
	print_stats
	cat /proc/spl/kstat/zfs/dbgmsg | egrep 'zio|vdev' > /tmp/stage$i


	echo ""
done

header "Test scrubbing a pool"

sudo ./cmd/zpool/zpool scrub mypool2
sudo ./cmd/zpool/zpool scrub mypool2
sudo ./cmd/zpool/zpool export mypool2
sudo dd if=/dev/zero of=/tmp/test_image1 bs=10M seek=15 count=10 conv=notrunc
clear_all
sudo ./cmd/zpool/zpool import mypool2
if [ "$read_err" == "1" ] ; then
	# create error on every read
	sudo mdadm -G /dev/md100 --layout=rt1
fi

sudo ./cmd/zpool/zpool scrub mypool2

if [ "$read_err" == "1" ] ; then
	# disable read errors
	sudo mdadm -G /dev/md100 --layout=clear
fi

sleep 5
header "Scrub results"
print_stats


header "Cleaning up"
sudo ./cmd/zpool/zpool export mypool2
sudo mdadm --stop /dev/md100
sudo mdadm --stop /dev/md101
sleep 2
sudo mdadm --remove /dev/md100
sudo mdadm --remove /dev/md101

sudo losetup -d /dev/loop100
sudo losetup -d /dev/loop101
sudo rmdir /tmp/mypool2

rm -f /tmp/test_image1 /tmp/test_image2
